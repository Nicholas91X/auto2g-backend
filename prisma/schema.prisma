// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id Int @id @default(autoincrement())

  email       String  @unique
  phoneNumber String?
  name        String
  surname     String

  role AccountRole @default(OTHER)

  password String

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  profilePicture String?

  active   Boolean @default(true)
  verified Boolean @default(false)

  Vendita Vendita[]
}

enum AccountRole {
  SYSTEM_ADMIN
  ADMIN
  CUSTOMER
  SELLER
  OTHER
}

enum Carburante {
  BENZINA
  DIESEL
  GPL
  METANO
  IBRIDA
  ELETTRICA
}

enum TipoDiCambio {
  MANUALE
  AUTOMATICO
}

enum Trazione {
  ANTERIORE
  POSTERIORE
  INTEGRALE
}

model AutoUsata {
  id      Int    @id @default(autoincrement())
  marca   String
  modello String
  targa   String @unique
  anno    Int
  prezzo  Float
  km      Int

  // --- DATI TECNICI ---
  carburante      Carburante?
  cilindrata      Int?
  potenzaCV       Int?
  potenzaKW       Int?
  tipoDiCambio    TipoDiCambio?
  trazione        Trazione?
  classeEmissione String?
  coloreEsterno   String?
  numeroPorte     Int?
  numeroPosti     Int?

  // --- CARATTERISTICHE E OPTIONAL ---
  abs               Boolean @default(false)
  airbag            Boolean @default(false)
  climatizzatore    Boolean @default(false)
  servosterzo       Boolean @default(false)
  navigatore        Boolean @default(false)
  sensoriParcheggio Boolean @default(false)
  cruiseControl     Boolean @default(false)
  interniInPelle    Boolean @default(false)
  cerchiInLega      Boolean @default(false)
  noteOptional      String?

  descrizione String?
  stato       AutoUsataStatus @default(DISPONIBILE)
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  immagini    ImmagineAuto[]

  Vendita Vendita[]
}

enum AutoUsataStatus {
  DISPONIBILE
  VENDUTA
  IN_ARRIVO
  IN_TRATTATIVA
  IN_RIPARAZIONE
}

model ImmagineAuto {
  id          Int       @id @default(autoincrement())
  url         String
  autoUsata   AutoUsata @relation(fields: [autoUsataId], references: [id], onDelete: Cascade)
  autoUsataId Int
  createdAt   DateTime  @default(now())
}

model Vendita {
  id           Int      @id @default(autoincrement())
  dataVendita  DateTime @default(now())
  prezzoFinale Float

  auto   AutoUsata @relation(fields: [autoId], references: [id])
  autoId Int       @unique

  acquirente   Account? @relation(fields: [acquirenteId], references: [id])
  acquirenteId Int?

  acquirenteNomeCognome String
  acquirenteInfo        String?
}
